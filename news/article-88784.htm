<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sscap4.github.io/news/article-88784.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SpringBoot和RocketMQ的实例RocketMQTemplate</title>
        <meta name="description" content="@RocketMQMessageListener @RocketMQMessageListener 标记消息消费者，可以简化代码。 consumerGroup：消费组，全局唯一 topic：主题 se" />
        <link rel="icon" href="/assets/website/img/sscap4/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Sscap4免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sscap4.github.io/news/article-88784.htm" />
    <meta property="og:site_name" content="Sscap4免费机场节点分享官网" />
    <meta property="og:title" content="SpringBoot和RocketMQ的实例RocketMQTemplate" />
    <meta property="og:image" content="https://sscap4.github.io/uploads/20250104/6d1739beadea5d45bd3fd299c4c1dadd.webp" />
        <meta property="og:release_date" content="2025-04-05T08:17:10" />
    <meta property="og:updated_time" content="2025-04-05T08:17:10" />
        <meta property="og:description" content="@RocketMQMessageListener @RocketMQMessageListener 标记消息消费者，可以简化代码。 consumerGroup：消费组，全局唯一 topic：主题 se" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringBoot和RocketMQ的实例RocketMQTemplate">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" href="/assets/website/css/sscap4/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/LineIcons.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/slick.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/animate.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/default.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-M4DY439HZT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-M4DY439HZT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="preloader">
        <div class="loader">
            <div class="ytp-spinner">
                <div class="ytp-spinner-container">
                    <div class="ytp-spinner-rotator">
                        <div class="ytp-spinner-left">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                        <div class="ytp-spinner-right">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <section class="header-area">
                <div class="navbar-area">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                                <span>Sscap4</span>
                                                            </a>
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarEight" aria-controls="navbarEight" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarEight">
                                <ul class="navbar-nav ml-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                    </ul>
                            </div>
                            <div class="navbar-btn d-none mt-15 d-lg-inline-block">
                                <a class="menu-bar" href="#side-menu-right"><i class="lni-menu"></i></a>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div id="home" class="slider-area">
            <div class="bd-example">
                <div id="carouselOne" class="carousel slide">
                    <div class="carousel-inner">
                        <div class="carousel-item bg_cover active" style="background-image: url(/assets/website/img/sscap4/slider-1.jpg)">
                            <div class="carousel-caption">
                                <div class="container">
                                    <div class="row justify-content-center">
                                        <div class="col-xl-6 col-lg-7 col-sm-10">
                                            <h1 class="carousel-title">SpringBoot和RocketMQ的实例RocketMQTemplate</h1>
                                            <p class="carousel-desc">
                                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="sidebar-right">
        <div class="sidebar-close">
            <a class="close" href="#close"><i class="lni-close"></i></a>
        </div>
        <div class="sidebar-content">
            <div class="sidebar-logo text-center">
                <a href="/">SSCap4</a>
            </div>
            <div class="sidebar-menu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
            <div class="sidebar-social d-flex align-items-center justify-content-center">
                <span>FOLLOW US</span>
                <ul>
                    <li><a href="#"><i class="lni-twitter-original"></i></a></li>
                    <li><a href="#"><i class="lni-facebook-filled"></i></a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="overlay-right"></div>
    <section id="portfolio" class="portfolio-area">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="RocketMQMessageListener_2" rel="nofollow"></a>@RocketMQMessageListener</h2> <p>@RocketMQMessageListener 标记消息消费者，可以简化代码。</p> <p>consumerGroup：消费组，全局唯一</p> <p>topic：主题</p> <p>selectorExpression ： 标签，默认" *" 全部</p> <p>consumeMode ：</p> <ol> <li>ConsumeMode.CONCURRENTLY 多线程并发竞争接受消费，不能保证消息的有效性，</li> <li>ConsumeMode.ORDERLY 一个队列一个线程，有序的接受消息</li> </ol> <p>messageModel ： 消息模式： MessageModel.CLUSTERING 点对点（默认）MessageModel.BROADCASTING 广播</p> <h2> <a id="RocketMQ_19" rel="nofollow"></a>RocketMQ事务</h2> <p><strong>1、Producer 发送事务消息</strong></p> <p>rocketMQTemplate.sendMessageInTransaction</p> <p>Producer （MQ发送方）发送事务消息至MQ Server，MQ Server将消息状态标记为Prepared（预备状态），注意此时这条消息消费者（MQ订阅方）是无法消费到的。</p> <p><strong>2、Producer 实现接口 RocketMQLocalTransactionListener</strong></p> <p><strong>2.1、重写方法 RocketMQLocalTransactionState executeLocalTransaction(Message message, Object arg)</strong></p> <p>Producer 端执行业务代码逻辑，通过本地数据库事务控制。</p> <p>若Producer 本地事务执行成功则自动向MQServer发送COMMIT消息，此时MQ订阅方才可以正常消费消息；</p> <p>若Producer 本地事务执行失败则自动向MQServer发送ROLLBACK消息，MQ Server接收到ROLLBACK消息后 将删除此消息 。</p> <p><strong>2.2、重写方法 RocketMQLocalTransactionState checkLocalTransaction(Message message)</strong></p> <p>如果执行Producer端本地事务过程中，执行端挂掉，网络异常，或者超时，导致消息的状态一直是Prepared（预备状态），MQ Server有一定时器会不停的询问 Producer的checkLocalTransaction方法来获取事务执行状态，这个过程叫事务回查。MQ Server会根据事务回查结果来决定是否投递消息。</p> <p><strong>3，消费者消费</strong></p> <p>MQ订阅消费消息，消费成功则向MQ回应ack，否则将重复接收消息。这里ack默认自动回应，即程序执行正常则自动回应ack。</p> <h2> <a id="1jar_47" rel="nofollow"></a>1，引用jar包</h2> <p>build.gradle文件添加jar包引用</p> <pre><code>compile group: 'org.apache.rocketmq', name: 'rocketmq-spring-boot-starter', version: '2.1.1' </code></pre> <h2> <a id="2_52" rel="nofollow"></a>2，配置</h2> <p>application.properties 配置文件</p> <pre><code>###rocketmq### rocketmq.name-server=192.168.1.3:9876 rocketmq.producer.group=app-demp rocketmq.producer.timeout=4000 </code></pre> <h2> <a id="3_60" rel="nofollow"></a>3，生产者</h2> <p><strong>MsgSender 消息发送接口</strong></p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MsgSender</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">/**      * 发送消息      *      * @param data  消息信息      * @param topic 主题      */</span>     <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/**      * 发送消息      *      * @param data  消息信息      * @param topic 主题      * @param tags  主题的标签      */</span>     <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> String tags<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">/**      * 发送消息(支持分布式事务)      *      * @param data  消息信息      * @param topic 主题      */</span>     <span class="token keyword">void</span> <span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/**      * 发送消息(支持分布式事务)      *      * @param data  消息信息      * @param topic 主题      * @param tags  主题的标签      */</span>     <span class="token keyword">void</span> <span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> String tags<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><strong>MsgSenderTemplateService 消息发送实现</strong></p> <pre><code class="prism language-java"> <span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON<span class="token punctuation">;</span> <span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RocketMQTemplate<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>Message<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>support<span class="token punctuation">.</span>MessageBuilder<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Slf4j</span> <span class="token annotation punctuation">@Component</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MsgSenderTemplateService</span> <span class="token keyword">implements</span> <span class="token class-name">MsgSender</span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Resource</span>     <span class="token keyword">private</span> RocketMQTemplate rocketMQTemplate<span class="token punctuation">;</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         rocketMQTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"发送MQ成功：message={}"</span><span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> String tags<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         rocketMQTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%s:%s"</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> tags<span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"发送MQ成功：message={}"</span><span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Message<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">&gt;</span> message <span class="token operator">=</span> MessageBuilder<span class="token punctuation">.</span><span class="token function">withPayload</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         rocketMQTemplate<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> message<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"发送MQ成功：message={}"</span><span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>String topic<span class="token punctuation">,</span> String tags<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MessageBuilder<span class="token generics function"><span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span></span> messageBuilder <span class="token operator">=</span> MessageBuilder<span class="token punctuation">.</span><span class="token function">withPayload</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>         messageBuilder<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          rocketMQTemplate<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%s:%s"</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> tags<span class="token punctuation">)</span><span class="token punctuation">,</span> messageBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"发送MQ成功：message={}"</span><span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>OrderProducer 订单发送普通消息</strong></p> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span>   <span class="token comment">/**  * @author qizenan  * @date 2020-9-9  **/</span> <span class="token annotation punctuation">@Service</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderProducer</span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Resource</span>     <span class="token keyword">private</span> MsgSender msgSender<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span> orderInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"orderId"</span><span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"description"</span><span class="token punctuation">,</span> <span class="token string">"我是注册订单，请尽快处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          msgSender<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">"TEMP"</span><span class="token punctuation">,</span> <span class="token string">"order"</span><span class="token punctuation">,</span> orderInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span> </code></pre> <h2> <a id="4_182" rel="nofollow"></a>4，消费者</h2> <p><strong>OrderConsumer 消费订单消息</strong></p> <pre><code class="prism language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON<span class="token punctuation">;</span> <span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span>MessageExt<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RocketMQMessageListener<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RocketMQListener<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>   <span class="token comment">/**  * @author qizenan  * @date 2020-9-9  **/</span> <span class="token annotation punctuation">@Slf4j</span> <span class="token annotation punctuation">@Component</span> <span class="token annotation punctuation">@RocketMQMessageListener</span><span class="token punctuation">(</span>consumerGroup <span class="token operator">=</span> <span class="token string">"TEMP-GROUP"</span><span class="token punctuation">,</span> topic <span class="token operator">=</span> <span class="token string">"TEMP"</span><span class="token punctuation">,</span>selectorExpression <span class="token operator">=</span><span class="token string">"order"</span> <span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderConsumer</span> <span class="token keyword">implements</span> <span class="token class-name">RocketMQListener</span><span class="token generics function"><span class="token punctuation">&lt;</span>MessageExt<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{<!-- --></span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span>MessageExt messageExt<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         String message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"收到消息，topic:{}, tag:{}, msgId:{}, body:{}"</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 messageExt<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>          Map<span class="token generics function"><span class="token punctuation">&lt;</span>Integer<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span> orderInfo <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"订单信息 orderInfo = {} "</span><span class="token punctuation">,</span> orderInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span> </code></pre> <p><strong>发生者运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230109/d97313c797f79bb31cad2eb465086037.jpg" alt="SpringBoot和RocketMQ的实例RocketMQTemplate"></p> <p><strong>消费者运行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230109/b138819cc564625bc111a7e558b7f55d.jpg" alt="SpringBoot和RocketMQ的实例RocketMQTemplate"></p> <h2> <a id="5RocketMQ_224" rel="nofollow"></a>5，RocketMQ的分布式事务</h2> <p><strong>OrderProducer 订单发送事件消息</strong></p> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span>   <span class="token comment">/**  * @author qizenan  * @date 2020-9-9  **/</span> <span class="token annotation punctuation">@Service</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderProducer</span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"msgSenderTemplateService"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> MsgSender msgSender<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span> orderInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"orderId"</span><span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"description"</span><span class="token punctuation">,</span> <span class="token string">"我是注册订单，请尽快处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          msgSender<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span><span class="token string">"TEMP"</span><span class="token punctuation">,</span> <span class="token string">"order"</span><span class="token punctuation">,</span> orderInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span> </code></pre> <p><strong>实现RocketMQLocalTransactionListener</strong></p> <pre><code class="prism language-java"> <span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON<span class="token punctuation">;</span> <span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RocketMQTransactionListener<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RocketMQLocalTransactionListener<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RocketMQLocalTransactionState<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>Message<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>MessageHeaders<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>   <span class="token comment">/**  * @author qizenan  * @date 2020-9-9  **/</span> <span class="token annotation punctuation">@Slf4j</span> <span class="token annotation punctuation">@Component</span> <span class="token annotation punctuation">@RocketMQTransactionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProducerListener</span> <span class="token keyword">implements</span> <span class="token class-name">RocketMQLocalTransactionListener</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">/**      * RocketMQ的Producer本地事务：先执行本地的业务代码（使用Spring的事件管理），判断是否成功。      * 成功返回： RocketMQLocalTransactionState.COMMIT,失败返回：RocketMQLocalTransactionState.ROLLBACK      */</span>     <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> RocketMQLocalTransactionState <span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span>Message message<span class="token punctuation">,</span> Object arg<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map orderInfo <span class="token operator">=</span> <span class="token function">checkDestination</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">"TEMP"</span><span class="token punctuation">,</span> <span class="token string">"order"</span><span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>orderInfo <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"执行本地订单业务逻辑 orderInfo={} "</span><span class="token punctuation">,</span> orderInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span> RocketMQLocalTransactionState<span class="token punctuation">.</span>COMMIT<span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">return</span> RocketMQLocalTransactionState<span class="token punctuation">.</span>ROLLBACK<span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> RocketMQLocalTransactionState<span class="token punctuation">.</span>COMMIT<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 根据 topic，tag 获取发送者的信息      *      * @param message RockeRtMQ的消息      * @param topic   主题      * @param tag     标签      * @param tClass  生产者发生的消息的class      * @return 生产者发生的消息的      */</span>     <span class="token keyword">private</span> <span class="token generics function"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> T <span class="token function">checkDestination</span><span class="token punctuation">(</span>Message message<span class="token punctuation">,</span> String topic<span class="token punctuation">,</span> String tag<span class="token punctuation">,</span> Class<span class="token generics function"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> tClass<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         String destination <span class="token operator">=</span> topic<span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             destination <span class="token operator">+=</span> <span class="token string">":"</span> <span class="token operator">+</span> tag<span class="token punctuation">;</span>         <span class="token punctuation">}</span>         MessageHeaders headers <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String msgDestination <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"rocketmq_TOPIC"</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String msgTag <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"rocketmq_TAGS"</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>msgTag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             msgDestination <span class="token operator">+=</span> <span class="token string">":"</span> <span class="token operator">+</span> msgTag<span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>destination<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>msgDestination<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> null<span class="token punctuation">;</span>         <span class="token punctuation">}</span>         Object msg <span class="token operator">=</span> headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> null<span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> msg<span class="token punctuation">,</span> tClass<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"msgDestination = {} 转化 {} 异常"</span><span class="token punctuation">,</span> msgDestination<span class="token punctuation">,</span> tClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> null<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 因为网络异常或其他原因时，RocketMQ的消息状态处于UNKNOWN时，调用该方法检查Producer的本地事务是否已经执行成功,      * 成功返回： RocketMQLocalTransactionState.COMMIT,失败返回：RocketMQLocalTransactionState.ROLLBACK      */</span>     <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> RocketMQLocalTransactionState <span class="token function">checkLocalTransaction</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map orderInfo <span class="token operator">=</span> <span class="token function">checkDestination</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">"TEMP"</span><span class="token punctuation">,</span> <span class="token string">"order"</span><span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>orderInfo <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">boolean</span> isSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>             log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"查询本地订单是否已经执行成功 orderInfo={},isSuccess={} "</span><span class="token punctuation">,</span> orderInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> isSuccess<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>isSuccess<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">return</span> RocketMQLocalTransactionState<span class="token punctuation">.</span>COMMIT<span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">return</span> RocketMQLocalTransactionState<span class="token punctuation">.</span>ROLLBACK<span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> RocketMQLocalTransactionState<span class="token punctuation">.</span>COMMIT<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>生产者执行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230109/43247475f30b0a6eae27d3b0ac985ac9.jpg" alt="SpringBoot和RocketMQ的实例RocketMQTemplate"></p> <p><strong>消费者执行结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230109/44ae550c6987bf968259c8fb2ca98f90.jpg" alt="SpringBoot和RocketMQ的实例RocketMQTemplate"></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-88062.htm">宠物食品厂需要投资多少钱呢（宠物食品厂需要投资多少钱呢视频）</a></p>
                                        <p>下一个：<a href="/news/article-88785.htm">国内动物疫苗龙头企业名单最新（动物疫苗龙头股排名）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-67563.htm" title="Docker基础 — 36、CMD指令和ENTRYPOINT指令的区别">Docker基础 — 36、CMD指令和ENTRYPOINT指令的区别</a></li>
                        <li class="py-2"><a href="/news/article-82319.htm" title="猫驱虫多久一次体内体外多少钱（猫咪体内驱虫多久钱）">猫驱虫多久一次体内体外多少钱（猫咪体内驱虫多久钱）</a></li>
                        <li class="py-2"><a href="/news/article-80221.htm" title="elment-UI动态添加多个输入框并进行部分表单验证">elment-UI动态添加多个输入框并进行部分表单验证</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-free-subscribe-node.htm" title="3月22日→20.9M/S|2025年最新免费节点Sscap4订阅链接地址">3月22日→20.9M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-80940.htm" title="FreeRTOS实时操作系统队列的API函数讲解_操作系统">FreeRTOS实时操作系统队列的API函数讲解_操作系统</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-3-node-share.htm" title="4月3日→22.2M/S|2025年最新免费节点Sscap4订阅链接地址">4月3日→22.2M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-67564.htm" title="抖音开网店怎么开新手无货源（抖音这么开网店）">抖音开网店怎么开新手无货源（抖音这么开网店）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-node-share-links.htm" title="3月11日→22.4M/S|2025年最新免费节点Sscap4订阅链接地址">3月11日→22.4M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-66942.htm" title="宠物食品加工厂手续怎么办理流程（宠物食品厂需要办什么手续）">宠物食品加工厂手续怎么办理流程（宠物食品厂需要办什么手续）</a></li>
                        <li class="py-2"><a href="/news/article-74779.htm" title="动物医院价格公示法律规定 动物医院价格公示法律规定最新">动物医院价格公示法律规定 动物医院价格公示法律规定最新</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer id="footer" class="footer-area">
        <div class="footer-copyright">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-12">
                        <div class="copyright text-center text-lg-left mt-10">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p class="text">
                                <a href="/">Sscap4免费机场节点分享官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <a href="#" class="back-to-top"><i class="lni-chevron-up"></i></a>
    <script src="/assets/website/js/frontend/sscap4/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/vendor/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/popper.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/slick.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/scrolling-nav.js"></script>
    <script src="/assets/website/js/frontend/sscap4/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/ajax-contact.js"></script>
    <script src="/assets/website/js/frontend/sscap4/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>