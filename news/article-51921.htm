<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sscap4.github.io/news/article-51921.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>C# 一维数组如何快速实现数组元素的数据类型的转换</title>
        <meta name="description" content="假设有一串字符串如下所示，字符串中的数字之间已用英文状态下的逗号隔开。要求用此字符串中的数字快速生成int类型的数组，且尽可能使用最少的代码量。 string str = "1,2,3,4,5,6,7" />
        <link rel="icon" href="/assets/website/img/sscap4/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Sscap4免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sscap4.github.io/news/article-51921.htm" />
    <meta property="og:site_name" content="Sscap4免费机场节点分享官网" />
    <meta property="og:title" content="C# 一维数组如何快速实现数组元素的数据类型的转换" />
    <meta property="og:image" content="https://sscap4.github.io/uploads/20250104/3eab7e59cb03912e7ccceeab7c44307b.webp" />
        <meta property="og:release_date" content="2025-02-06T05:28:23" />
    <meta property="og:updated_time" content="2025-02-06T05:28:23" />
        <meta property="og:description" content="假设有一串字符串如下所示，字符串中的数字之间已用英文状态下的逗号隔开。要求用此字符串中的数字快速生成int类型的数组，且尽可能使用最少的代码量。 string str = "1,2,3,4,5,6,7" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C# 一维数组如何快速实现数组元素的数据类型的转换">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" href="/assets/website/css/sscap4/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/LineIcons.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/slick.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/animate.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/default.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-M4DY439HZT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-M4DY439HZT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="preloader">
        <div class="loader">
            <div class="ytp-spinner">
                <div class="ytp-spinner-container">
                    <div class="ytp-spinner-rotator">
                        <div class="ytp-spinner-left">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                        <div class="ytp-spinner-right">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <section class="header-area">
                <div class="navbar-area">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                                <span>Sscap4</span>
                                                            </a>
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarEight" aria-controls="navbarEight" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarEight">
                                <ul class="navbar-nav ml-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="#">关于</a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="navbar-btn d-none mt-15 d-lg-inline-block">
                                <a class="menu-bar" href="#side-menu-right"><i class="lni-menu"></i></a>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div id="home" class="slider-area">
            <div class="bd-example">
                <div id="carouselOne" class="carousel slide">
                    <div class="carousel-inner">
                        <div class="carousel-item bg_cover active" style="background-image: url(/assets/website/img/sscap4/slider-1.jpg)">
                            <div class="carousel-caption">
                                <div class="container">
                                    <div class="row justify-content-center">
                                        <div class="col-xl-6 col-lg-7 col-sm-10">
                                            <h1 class="carousel-title">C# 一维数组如何快速实现数组元素的数据类型的转换</h1>
                                            <p class="carousel-desc">
                                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="sidebar-right">
        <div class="sidebar-close">
            <a class="close" href="#close"><i class="lni-close"></i></a>
        </div>
        <div class="sidebar-content">
            <div class="sidebar-logo text-center">
                <a href="/">SSCap4</a>
            </div>
            <div class="sidebar-menu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
            <div class="sidebar-social d-flex align-items-center justify-content-center">
                <span>FOLLOW US</span>
                <ul>
                    <li><a href="#"><i class="lni-twitter-original"></i></a></li>
                    <li><a href="#"><i class="lni-facebook-filled"></i></a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="overlay-right"></div>
    <section id="portfolio" class="portfolio-area">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				</h1> <p>假设有一串字符串如下所示，字符串中的数字之间已用英文状态下的逗号隔开。要求用此字符串中的数字快速生成int类型的数组，且尽可能使用最少的代码量。</p> <pre class="language-csharp"><code>string str = "1,2,3,4,5,6,7,8,9";</code></pre> </h1> <p>我相信大多数同学在拿到这题的时候，一般都会给出以下的解决方案：</p> <pre class="language-csharp"><code>public int[] String2IntArray(string str) {     var strArr = str.Split(',');     int[] numArr = new int[strArr.Length];     for (int i = 0; i &lt; strArr.Length; i++)     {         numArr[i] = Convert.ToInt32(strArr[i]);     }     return numArr; }</code></pre> <p>上述代码确实能解决上述场景中的问题。</p> </h1> <p>可是这时要求变了，改为生成char类型的数组。</p> <p>这时一部分同学会说，既然让生成char类型数组，那我改下数据类型不就可以了嘛，于是给出如下代码：</p> <pre class="language-csharp"><code>public char[] String2CharArray(string str) {     var strArr = str.Split(',');     char[] cArr = new char[strArr.Length];     for (int i = 0; i &lt; strArr.Length; i++)     {         cArr[i] = Convert.ToChar(strArr[i]);     }     return cArr; }</code></pre> <p>另外一部分同学会说，每改变一次输出的数据类型就要再写一个与之相应的方法，且方法还不能做到通用性，这样很不好。能不能用泛型解决此问题呢？想了一下，然后给出了以下代码：</p> <pre class="language-csharp"><code>public T[] String2Array&lt;T&gt;(string str) {     var tc = TypeDescriptor.GetConverter(typeof(T));     var strArr = str.Split(',');     T[] tArr = new T[strArr.Length];     for (int i = 0; i &lt; strArr.Length; i++)     {         tArr[i] = (T)tc.ConvertTo(strArr[i], typeof(T));     }     return tArr; }</code></pre> <p>泛型代码的解决方案可圈可点，可通用性感觉还是较差，代码量也还是有点多。</p> <p>如果这时要求数组实例直接进行数据元素的数据类型转换呢？上面泛型代码解决方案又要进行代码优化改进。这时有没有更好的解决方案呢？答案肯定是有的。</p> </h1> <p>数组（Array）类有一个静态方法ConvertAll，该方法能将一种类型的数组转换为另一种类型的数组。该方法能有效的解决上述问题的痛点。</p> <p>我们先来看一下这个方法的定义是怎样的：</p> <p><code>public static TOutput[] ConvertAll&lt;TInput, TOutput&gt;(TInput[] array, Converter&lt;TInput, TOutput&gt; converter);</code></p> <ul> <li>该方法没有重载方法，是类的静态方法，无需创建实例便可直接通过类名调用。</li> <li>TInput：源数组元素的类型。</li> <li>TOutput：目标数组元素的类型。</li> </ul> <p>上述问题用ConvertAll方法该如何编码实现呢？下面给出代码示例：</p> <pre class="language-csharp"><code>var arr = str.Split(','); var numArr = Array.ConvertAll&lt;string, int&gt;(arr, z =&gt; int.Parse(z));</code></pre> <p>&nbsp;或者</p> <pre class="language-csharp"><code>var arr = str.Split(','); var numArr = Array.ConvertAll&lt;string, int&gt;(arr, delegate (string s) { return int.Parse(s); });</code></pre> <p>&nbsp;ConvertAll方法仅用两行代码就能解决场景中的问题，与前述的其他解决方案相比，结果一目了然、不言而喻。</p> </h1> <p>那ConvertAll是如何实现数组元素的数据类型的转换的呢？我们反编译一下该方法，得到如下代码：</p> <pre class="language-csharp"><code>public static TOutput[] ConvertAll&lt;TInput, TOutput&gt;(TInput[] array, Converter&lt;TInput, TOutput&gt; converter) {     if (array == null)     {         throw new ArgumentNullException("array");     }          if (converter == null)     {         throw new ArgumentNullException("converter");     }          TOutput[] array2 = new TOutput[array.Length];     for (int i = 0; i &lt; array.Length; i++)     {         array2[i] = converter(array[i]);     }          return array2; }</code></pre> <p>&nbsp;我们再看一下Converter是如何定义的：</p> <p><code>public delegate TOutput Converter&lt;in TInput, out TOutput&gt;(TInput input);</code></p> <p>原来converter实际是一个委托。</p> <p>知其然知其所以然，以后再遇到数组元素的数据类型转换的问题我们就不再怕的了。</p> <p>这时，有的同学可能会说：“在不知道数组（Array）类ConvertAll静态方法和其实现的提前下，我也是有可能写出与ConvertAll方法类似或相同的代码实现的！”。那不得不说这些同学是真的很厉害，既然系统底层提供了该方法供我们使用，我们再编码一遍（提前是知道ConvertAll方法的存在和该方法的代码实现）岂不是有丢丢多余呀？直接使用何乐而不为呢？</p> <p>本篇文章我们经历了：提出问题-&gt;解决问题-&gt;延伸问题-&gt;刨根问底</p> <p>这样的思考方式有助于我们快速提升编码能力，也希望这样的思考方式能给各位同学解决问题带来些许灵感。</p> <p>--------------The&nbsp; End--------------</p> <p>----------本篇文章到此结束----------</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-51920.htm">springboot-autoConfiguration原理</a></p>
                                        <p>下一个：<a href="/news/article-52436.htm">免费领养宠物包邮吗现在（免费领养宠物送到家）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-39391.htm" title="vue3中 setup注意点">vue3中 setup注意点</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-22-free-subscribe-node.htm" title="1月22日→20.5M/S|2025年最新免费节点Sscap4订阅链接地址">1月22日→20.5M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-19-free-node-subscribe-links.htm" title="1月19日→22.2M/S|2025年最新免费节点Sscap4订阅链接地址">1月19日→22.2M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-51921.htm" title="C# 一维数组如何快速实现数组元素的数据类型的转换">C# 一维数组如何快速实现数组元素的数据类型的转换</a></li>
                        <li class="py-2"><a href="/news/article-38899.htm" title="动物生物疫苗工资 动物生物疫苗工资高吗">动物生物疫苗工资 动物生物疫苗工资高吗</a></li>
                        <li class="py-2"><a href="/news/article-48793.htm" title="欢颜剧情介绍,演员表,角色介绍,剧集评价(欢颜剧情介绍,演员表,角色介绍,剧集评价语)">欢颜剧情介绍,演员表,角色介绍,剧集评价(欢颜剧情介绍,演员表,角色介绍,剧集评价语)</a></li>
                        <li class="py-2"><a href="/news/article-49830.htm" title="宠物领养要花钱吗现在多少钱一个月（宠物领养要花钱吗现在多少钱一个月呢）">宠物领养要花钱吗现在多少钱一个月（宠物领养要花钱吗现在多少钱一个月呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-12-node-share.htm" title="1月12日→20.5M/S|2025年最新免费节点Sscap4订阅链接地址">1月12日→20.5M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-43852.htm" title="关于Postman调试@RequestBody入参模式接口的用例说明">关于Postman调试@RequestBody入参模式接口的用例说明</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-25-free-subscribe-node.htm" title="1月25日→18.2M/S|2025年最新免费节点Sscap4订阅链接地址">1月25日→18.2M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer id="footer" class="footer-area">
        <div class="footer-copyright">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-12">
                        <div class="copyright text-center text-lg-left mt-10">
                            <p>
                                <a href="/">首页</a> |
                                <a href="/free-node/">免费节点</a> |
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p class="text">
                                <a href="/">Sscap4免费机场节点分享官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <a href="#" class="back-to-top"><i class="lni-chevron-up"></i></a>
    <script src="/assets/website/js/frontend/sscap4/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/vendor/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/popper.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/slick.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/scrolling-nav.js"></script>
    <script src="/assets/website/js/frontend/sscap4/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/ajax-contact.js"></script>
    <script src="/assets/website/js/frontend/sscap4/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>