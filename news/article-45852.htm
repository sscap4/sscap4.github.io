<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sscap4.github.io/news/article-45852.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SSM框架-SpringMVC详解</title>
        <meta name="description" content="Springmvc是spring框架的一个模块，spring和springmvc无需中间整合层整合。 Springmvc是一个基于mvc的web框架 表现层的三大任务：   URL到controlle" />
        <link rel="icon" href="/assets/website/img/sscap4/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Sscap4免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sscap4.github.io/news/article-45852.htm" />
    <meta property="og:site_name" content="Sscap4免费机场节点分享官网" />
    <meta property="og:title" content="SSM框架-SpringMVC详解" />
    <meta property="og:image" content="https://sscap4.github.io/uploads/20250104/959cf6f1d4eb54aa98fe08a8b61fd965.webp" />
        <meta property="og:release_date" content="2025-01-25T09:52:15" />
    <meta property="og:updated_time" content="2025-01-25T09:52:15" />
        <meta property="og:description" content="Springmvc是spring框架的一个模块，spring和springmvc无需中间整合层整合。 Springmvc是一个基于mvc的web框架 表现层的三大任务：   URL到controlle" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SSM框架-SpringMVC详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" href="/assets/website/css/sscap4/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/LineIcons.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/slick.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/animate.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/default.css">
    <link rel="stylesheet" href="/assets/website/css/sscap4/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-M4DY439HZT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-M4DY439HZT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="preloader">
        <div class="loader">
            <div class="ytp-spinner">
                <div class="ytp-spinner-container">
                    <div class="ytp-spinner-rotator">
                        <div class="ytp-spinner-left">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                        <div class="ytp-spinner-right">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <section class="header-area">
                <div class="navbar-area">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                                <span>SSCap4</span>
                                                            </a>
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarEight" aria-controls="navbarEight" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarEight">
                                <ul class="navbar-nav ml-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="#">关于</a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="navbar-btn d-none mt-15 d-lg-inline-block">
                                <a class="menu-bar" href="#side-menu-right"><i class="lni-menu"></i></a>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div id="home" class="slider-area">
            <div class="bd-example">
                <div id="carouselOne" class="carousel slide">
                    <div class="carousel-inner">
                        <div class="carousel-item bg_cover active" style="background-image: url(/assets/website/img/sscap4/slider-1.jpg)">
                            <div class="carousel-caption">
                                <div class="container">
                                    <div class="row justify-content-center">
                                        <div class="col-xl-6 col-lg-7 col-sm-10">
                                            <h1 class="carousel-title">SSM框架-SpringMVC详解</h1>
                                            <p class="carousel-desc">
                                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="sidebar-right">
        <div class="sidebar-close">
            <a class="close" href="#close"><i class="lni-close"></i></a>
        </div>
        <div class="sidebar-content">
            <div class="sidebar-logo text-center">
                <a href="/">SSCap4</a>
            </div>
            <div class="sidebar-menu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
            <div class="sidebar-social d-flex align-items-center justify-content-center">
                <span>FOLLOW US</span>
                <ul>
                    <li><a href="#"><i class="lni-twitter-original"></i></a></li>
                    <li><a href="#"><i class="lni-facebook-filled"></i></a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="overlay-right"></div>
    <section id="portfolio" class="portfolio-area">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> </h1> <p>Springmvc是spring框架的一个模块，spring和springmvc无需中间整合层整合。</p> <p>Springmvc是一个基于mvc的web框架</p> <p>表现层的三大任务：</p> <p><img decoding="async" alt="SSM框架-SpringMVC详解" src="http://img.555519.xyz/uploads/20221201/ac5a2dc526b246d3f661599d8d3bbca5.jpg"></p> <ul> <li>URL到controller的映射</li> <li>http请求参数绑定</li> <li>http响应的生成和输出</li> </ul> </h1> <p>MVC设计模式是一种通用的软件编程思想。</p> <p>在MVC设计模式中认为, 任何软件都可以分为三部分组成：</p> <p>(1)控制程序流转的控制器（Controller）</p> <p>(2)封装数据处理数据的模型（Model）</p> <p>(3)负责展示数据的视图（view）</p> </h1> <p><img decoding="async" alt="SSM框架-SpringMVC详解" src="http://img.555519.xyz/uploads/20221201/fd52f1a340b854e822f95ee4ad35030f.jpg"></p> <p>(1) .用户发送请求 至 前端控制器(DispatcherServlet)；</p> <p>提示：DispatcherServlet的作用：接收请求，调用其它组件处理请求，响应结 果，相当于转发器、中央处理器，是整个流程控制的中心</p> <p>(2) .前端控制器(DispatcherServlet)收到请求后调用处理器映射器 (HandlerMapping)</p> <p>处理器映射器(HandlerMapping)找到具体的Controller(可以根据xml配置、注解进 行查找)，并将Controller返回给DispatcherServlet；</p> <p>(3) .前端控制器(DispatcherServlet)调用处理器适配器(HandlerAdapter)。处理 器适配器经过适配调用具体的Controller；(Controller--&gt; service --&gt; Dao --&gt; 数据库)</p> <p>Controller执行完成后返回ModelAndView，</p> <p>提示：Model(模型数据，即Controller处理的结果，Map) View(逻辑视图名，即 负责展示结果的JSP页面的名字)</p> <p>处理器适配器(HandlerAdapter)将controller执行的结果(ModelAndView)返回给前 端控制器(DispatcherServlet)；</p> <p>(4) .前端控制器(DispatcherServlet)将执行的结果(ModelAndView)传给视图解析 器(ViewReslover)</p> <p>视图解析器(ViewReslover)根据View(逻辑视图名)解析后返回具体JSP页面</p> <p>(5) .前端控制器(DispatcherServlet)根据Model对View进行渲染（即将模型数据 填充至视图中）；</p> <p>前端控制器(DispatcherServlet)将填充了数据的网页响应给用户</p> </h1> <p>第一步：创建maven项目springmvc</p> <p><img decoding="async" alt="SSM框架-SpringMVC详解" src="http://img.555519.xyz/uploads/20221201/a0c8bf65305d689766193221d730478c.jpg"></p> <p>第二步：在pom文件中添加依赖</p> <pre><code>&lt;dependencies&gt;     &lt;!-- 单元测试 --&gt;     &lt;dependency&gt;         &lt;groupId&gt;junit&lt;/groupId&gt;         &lt;artifactId&gt;junit&lt;/artifactId&gt;         &lt;version&gt;4.10&lt;/version&gt;         &lt;scope&gt;test&lt;/scope&gt;     &lt;/dependency&gt;     &lt;!-- SpringMVC的jar包 --&gt;     &lt;dependency&gt;         &lt;groupId&gt;org.springframework&lt;/groupId&gt;         &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;         &lt;version&gt;4.1.3.RELEASE&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- servlet 和 jsp的jar包 --&gt;     &lt;dependency&gt;         &lt;groupId&gt;javax.servlet&lt;/groupId&gt;         &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;         &lt;version&gt;2.5&lt;/version&gt;         &lt;scope&gt;provided&lt;/scope&gt;     &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;javax.servlet&lt;/groupId&gt;         &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;         &lt;version&gt;2.0&lt;/version&gt;         &lt;scope&gt;provided&lt;/scope&gt;     &lt;/dependency&gt;     &lt;!-- java对象转换json的工具类     &lt;dependency&gt;         &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;         &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;         &lt;version&gt;2.5.1&lt;/version&gt;     &lt;/dependency&gt;     --&gt; &lt;/dependencies&gt;</code></pre> <p>第三步：web.xml中配置前端控制器</p> <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          xmlns="http://java.sun.com/xml/ns/javaee"          xsi:schemaLocation="http://java.sun.com/xml/ns/javaee                              http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"          id="WebApp_ID" version="2.5"&gt;     &lt;!-- 配置springmvc前端控制器, 将所有请求交给springmvc来处理 --&gt;     &lt;servlet&gt;         &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;         &lt;servletclass&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servletclass&gt;     &lt;!-- 配置springmvc核心配置文件的位置，默认Springmvc的配置文件是在     WEB-INF目录下，默认的名字为springmvc-servlet.xml，如果要放在其他目录，则     需要指定如下配置：     --&gt;     &lt;init-param&gt;         &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;         &lt;param-value&gt;classpath:springmvc-config.xml&lt;/param-value&gt;     &lt;/init-param&gt;     &lt;/servlet&gt;     &lt;!-- 其中的斜杠（/）表示拦截所有请求（除JSP以外）, 所有请求都要经过     springmvc前端控制器 --&gt;     &lt;servlet-mapping&gt;         &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;         &lt;url-pattern&gt;/&lt;/url-pattern&gt;     &lt;/servlet-mapping&gt; &lt;/web-app&gt;</code></pre> <p>第四步：创建并配置springmvc-config.xml</p> <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:mvc="http://www.springframework.org/schema/mvc"        xmlns:context="http://www.springframework.org/schema/context"        xsi:schemaLocation="http://www.springframework.org/schema/mvc                            http://www.springframework.org/schema/mvc/spring-mvc4.0.xsd                            http://www.springframework.org/schema/beans                            http://www.springframework.org/schema/beans/springbeans-4.0.xsd                            http://www.springframework.org/schema/context                            http://www.springframework.org/schema/context/spring-context4.0.xsd"&gt;     &lt;!-- 1.配置前端控制器放行静态资源(html/css/js等，否则静态资源将无法访问) --&gt;     &lt;mvc:default-servlet-handler/&gt;     &lt;!-- 2.配置注解驱动，用于识别注解（比如@Controller） --&gt;     &lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;     &lt;!-- 3.配置需要扫描的包：spring自动去扫描 base-package 下的类，     如果扫描到的类上有 @Controller、@Service、@Component等注解，     将会自动将类注册为bean--&gt;     &lt;context:component-scan base-package="com.tedu.controller"&gt;     &lt;/context:component-scan&gt;     &lt;!-- 4.配置内部资源视图解析器     prefix:配置路径前缀     suffix:配置文件后缀     --&gt;     &lt;bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt;         &lt;property name="prefix" value="/WEB-INF/pages/"/&gt;         &lt;property name="suffix" value=".jsp"/&gt;</code></pre> <p>第五步：创建HelloController</p> </h1> <p>restController返回json对象</p> <p>controller返回string：modelandview</p> <p>controller+responsebody返回json对象</p> <pre><code>package com.tedu.controller;  import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMapping;  /* @Controller，如果当前类所在的包配置了Spring容器包扫描，具有  * 该注解的类，就会作为bean注册到spring容器中，由spring容器  * 创建实例。 */ @Controller public class HelloController {     /* @RequestMapping为当前方法配置访问路径      * 当浏览器访问http://localhost:8080/day20-springmvc/hello            * 如果Controller类上没有配置访问路径，当前项目中所有      *     controller中方法上的访问路径都不同冲突！ */     @RequestMapping("/hello")     public String testHello() {         System.out.println( "HelloController.testHello()" );         System.out.println( "hello springmvc..." );         //跳转到 /WEB-INF/pages/home.jsp         return "home";     } }</code></pre> <p>第六步：创建并实现home.jsp</p> <p>在WEB-INF/pages/目录下，创建home.jsp页面。</p> <pre><code>&lt;%@ page language="java" contentType="text/html; charset=UTF-8"     pageEncoding="UTF-8"%&gt; &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Insert title here&lt;/title&gt; &lt;/head&gt; &lt;body&gt;     &lt;h1&gt;day20-springmvc...home.jsp...&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt;</code></pre> <p>第七步：发送请求，进行测试</p> <blockquote> <p>打开浏览器，输入url地址： http://localhost :8080/day16-springmv/hello 地址。</p> </blockquote> </h1> <p>重定向redirect和转发forward的区别</p> <p>1，重定向浏览器地址栏显示新的地址，转发地址栏不变</p> <p>2，重定向可以重定向别的网站，转发只能转发到本网站中的方法。</p> </h1> <p>适用于原先的网页不继续提供服务了。</p> <pre><code>@Controller public class UserController {     //重定向，原先的登录地址     @RequestMapping("/login")     public String login() {         return "redirect:https://passport.jd.com/new/login.aspx";     } }</code></pre> <p>http://localhost:8080/login</p> <p><img decoding="async" alt="SSM框架-SpringMVC详解" src="http://img.555519.xyz/uploads/20221201/a7d0d76f6f2f8a2cd08ab2a5b7653bb1.jpg"></p> <p>转发后浏览器的地址栏变为转发后的地址。</p> <p>在chrome的调试窗口中network中查看status code</p> <p><img decoding="async" alt="SSM框架-SpringMVC详解" src="http://img.555519.xyz/uploads/20221201/5ccf6d18e5ef14b9fc40c9e96d65f2e1.jpg"></p> </h1> <p>转发后浏览器地址栏还是原来的地址。所以转发前请求的参数在转发后仍然可以读取到。</p> <pre><code>//第一输入用户名和密码     @RequestMapping("/loginByName")     @ResponseBody     public String loginByNamePwd(String username,String password) {                  return "login";     }          //再次登录时，还要输入验证码     @RequestMapping("/loginByCode")     public String loginByCode(String username,String password,String code) {         //判断验证码是否正确         return "forward:/loginByName";     }</code></pre> <p><img decoding="async" alt="SSM框架-SpringMVC详解" src="http://img.555519.xyz/uploads/20221201/258bf99b13f6ce3e58738ded5aa45a32.jpg"></p> </h1> <p>@PathVariable用于将请求URL中的模板变量映射到功能处理方法的参数上</p> <p>形成RUSTFul形式，这将是未来的发展趋势。它更加简洁，安全。强化URL GET访问方式。</p> <pre><code>@RestController public class OrderCotroller {     @RequestMapping("/order/{startTime}/{endTime}")     public String searchByDate(@PathVariable String startTime,             @PathVariable String endTime) {         return "restful startTime="+startTime+",endtime="+endtime;     } }</code></pre> <p>浏览器访问的URL</p> <blockquote> <p>http://localhost :8080/order/2019-10-01/2020-10-10</p> </blockquote> <p>自动将URL 中模板变量{startTime}和{endTime}绑定到@PathVariable注解的同名参数上，即入参后startTime=“2019-10-01”、endTime=“2020-10-10”。</p> <p></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-45343.htm">动物防疫法实行什么方针（动物防疫法是指）</a></p>
                                        <p>下一个：<a href="/news/article-45853.htm">动物疫苗行业排名榜最新（国内动物疫苗龙头企业）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-17-free-high-speed-nodes.htm" title="1月17日→20.6M/S|2025年最新免费节点Sscap4订阅链接地址">1月17日→20.6M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-43370.htm" title="SpringBoot如何配置Druid数据源监控页面">SpringBoot如何配置Druid数据源监控页面</a></li>
                        <li class="py-2"><a href="/news/article-38409.htm" title="为啥家猫不需要打疫苗宠物猫要打呢（为什么猫不用打狂犬疫苗）">为啥家猫不需要打疫苗宠物猫要打呢（为什么猫不用打狂犬疫苗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-free-high-speed-nodes.htm" title="1月14日→21.2M/S|2025年最新免费节点Sscap4订阅链接地址">1月14日→21.2M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-43371.htm" title="动物疫苗去哪买便宜（动物疫苗那里买）">动物疫苗去哪买便宜（动物疫苗那里买）</a></li>
                        <li class="py-2"><a href="/news/article-40870.htm" title="动物疫苗管理法律法规最新版（动物疫苗的管理方法）">动物疫苗管理法律法规最新版（动物疫苗的管理方法）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-21-node-share.htm" title="1月21日→20.4M/S|2025年最新免费节点Sscap4订阅链接地址">1月21日→20.4M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-42861.htm" title="vue 实现弹窗关闭后刷新效果_vue.js">vue 实现弹窗关闭后刷新效果_vue.js</a></li>
                        <li class="py-2"><a href="/news/article-45852.htm" title="SSM框架-SpringMVC详解">SSM框架-SpringMVC详解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-free-subscribe-node.htm" title="1月10日→18.8M/S|2025年最新免费节点Sscap4订阅链接地址">1月10日→18.8M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer id="footer" class="footer-area">
        <div class="footer-copyright">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-12">
                        <div class="copyright text-center text-lg-left mt-10">
                            <p>
                                <a href="/">首页</a> |
                                <a href="/free-node/">免费节点</a> |
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p class="text">
                                <a href="/">Sscap4免费机场节点分享官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <a href="#" class="back-to-top"><i class="lni-chevron-up"></i></a>
    <script src="/assets/website/js/frontend/sscap4/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/vendor/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/popper.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/slick.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/scrolling-nav.js"></script>
    <script src="/assets/website/js/frontend/sscap4/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/ajax-contact.js"></script>
    <script src="/assets/website/js/frontend/sscap4/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sscap4/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>